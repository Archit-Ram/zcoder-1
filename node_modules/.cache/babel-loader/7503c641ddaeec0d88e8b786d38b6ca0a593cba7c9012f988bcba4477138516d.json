{"ast":null,"code":"var _jsxFileName = \"/Users/littlearchit/Desktop/zcoder_-main/src/screen/AddQuestion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport Button from \"@mui/material/Button\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport \"./AddQuestion.css\";\nimport { CurrentUserContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddQuestion = () => {\n  _s();\n  const {\n    currentUsername\n  } = useContext(CurrentUserContext);\n  const [uploadedQuestion, setUploadedQuestion] = useState({\n    username: currentUsername,\n    question: \"\",\n    notes: \"\",\n    code: \"\",\n    access: \"public\" // Set the initial state to \"public\"\n  });\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUploadedQuestion(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleUpload = async () => {\n    if (!uploadedQuestion.access) {\n      alert(\"Please select at least one option for access (Public/Private)\");\n      return;\n    }\n\n    // Proceed with uploading the question\n    console.log(uploadedQuestion);\n    try {\n      const response = await fetch(`http://localhost:8000/${uploadedQuestion.username}/uploadQuestion`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(uploadedQuestion)\n      });\n      if (response.ok) {\n        alert(\"Question Uploaded!\");\n        //navigate(\"/explore\");\n      } else {\n        const data = await response.json();\n        alert(data.msg);\n      }\n    } catch (error) {\n      console.error(\"Error during Uploading Question:\", error);\n      alert(\"Upload failed. Please try again later.\");\n    }\n\n    // Reset the form fields after upload\n    setUploadedQuestion({\n      username: currentUsername,\n      question: \"\",\n      notes: \"\",\n      code: \"\",\n      access: \"public\"\n    });\n  };\n  const handleAccessChange = event => {\n    // Update the access state based on the selected value\n    setUploadedQuestion(prevState => ({\n      ...prevState,\n      access: event.target.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddQuestion\",\n    id: \"addquestion\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuestionArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"QuestionArea-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: [\"Write your Question:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"inputLiveCode\",\n            name: \"question\",\n            value: uploadedQuestion.question,\n            onChange: handleChange,\n            placeholder: \"Write your question here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: [\"Write your Notes\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"notes\",\n            value: uploadedQuestion.notes,\n            onChange: handleChange,\n            placeholder: \"Write your notes here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"QuestionArea-right\",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          name: \"code\",\n          value: uploadedQuestion.code,\n          onChange: value => setUploadedQuestion(prevState => ({\n            ...prevState,\n            code: value\n          })),\n          height: \"100%\",\n          width: \"90%\",\n          theme: \"vs-dark\",\n          language: \"cpp\",\n          options: {\n            automaticLayout: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuestionUploadArea\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          children: \"Access\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          \"aria-label\": \"access\",\n          name: \"access\",\n          value: uploadedQuestion.access,\n          onChange: handleAccessChange,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"public\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 24\n            }, this),\n            label: \"Public\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"private\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 24\n            }, this),\n            label: \"Private\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(AddQuestion, \"W+9mbczWBSuy7tRgbNZ6wV1TjeA=\");\n_c = AddQuestion;\nexport default AddQuestion;\nvar _c;\n$RefreshReg$(_c, \"AddQuestion\");","map":{"version":3,"names":["React","useState","useContext","Editor","Button","FormControlLabel","Radio","RadioGroup","FormControl","FormLabel","CurrentUserContext","jsxDEV","_jsxDEV","AddQuestion","_s","currentUsername","uploadedQuestion","setUploadedQuestion","username","question","notes","code","access","handleChange","event","name","value","target","prevState","handleUpload","alert","console","log","response","fetch","method","headers","body","JSON","stringify","ok","data","json","msg","error","handleAccessChange","className","id","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","height","width","theme","language","options","automaticLayout","variant","color","onClick","component","control","label","_c","$RefreshReg$"],"sources":["/Users/littlearchit/Desktop/zcoder_-main/src/screen/AddQuestion.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport Button from \"@mui/material/Button\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport \"./AddQuestion.css\";\nimport { CurrentUserContext } from \"../App\";\nconst AddQuestion = () => {\n  const { currentUsername } = useContext(CurrentUserContext);\n  const [uploadedQuestion, setUploadedQuestion] = useState({\n    username: currentUsername,\n    question: \"\",\n    notes: \"\",\n    code: \"\",\n    access: \"public\", // Set the initial state to \"public\"\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setUploadedQuestion((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleUpload = async () => {\n    if (!uploadedQuestion.access) {\n      alert(\"Please select at least one option for access (Public/Private)\");\n      return;\n    }\n\n    // Proceed with uploading the question\n    console.log(uploadedQuestion);\n\n    try {\n      const response = await fetch(\n        `http://localhost:8000/${uploadedQuestion.username}/uploadQuestion`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(uploadedQuestion),\n        }\n      );\n\n      if (response.ok) {\n        alert(\"Question Uploaded!\");\n        //navigate(\"/explore\");\n      } else {\n        const data = await response.json();\n        alert(data.msg);\n      }\n    } catch (error) {\n      console.error(\"Error during Uploading Question:\", error);\n      alert(\"Upload failed. Please try again later.\");\n    }\n\n    // Reset the form fields after upload\n    setUploadedQuestion({\n      username: currentUsername,\n      question: \"\",\n      notes: \"\",\n      code: \"\",\n      access: \"public\",\n    });\n  };\n\n  const handleAccessChange = (event) => {\n    // Update the access state based on the selected value\n    setUploadedQuestion((prevState) => ({\n      ...prevState,\n      access: event.target.value,\n    }));\n  };\n\n  return (\n    <div className=\"AddQuestion\" id=\"addquestion\">\n      <div className=\"QuestionArea\">\n        <div className=\"QuestionArea-left\">\n          <label className=\"input-label\">\n            Write your Question:\n            <textarea\n            className=\"inputLiveCode\"\n              name=\"question\"\n              value={uploadedQuestion.question}\n              onChange={handleChange}\n              placeholder=\"Write your question here\"\n            />\n          </label>\n          <label className=\"input-label\">\n            Write your Notes\n            <textarea\n              name=\"notes\"\n              value={uploadedQuestion.notes}\n              onChange={handleChange}\n              placeholder=\"Write your notes here\"\n            />\n          </label>\n        </div>\n        <div className=\"QuestionArea-right\">\n          <Editor\n            name=\"code\"\n            value={uploadedQuestion.code}\n            onChange={(value) =>\n              setUploadedQuestion((prevState) => ({\n                ...prevState,\n                code: value,\n              }))\n            }\n            height=\"100%\"\n            width=\"90%\"\n            theme=\"vs-dark\"\n            language=\"cpp\"\n            options={{ automaticLayout: true }}\n          />\n        </div>\n      </div>\n\n      <div className=\"QuestionUploadArea\">\n        <Button variant=\"contained\" color=\"success\" onClick={handleUpload}>\n          Upload\n        </Button>\n        <Button variant=\"contained\" color=\"error\">\n          Cancel\n        </Button>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Access</FormLabel>\n          <RadioGroup\n            aria-label=\"access\"\n            name=\"access\"\n            value={uploadedQuestion.access}\n            onChange={handleAccessChange}\n          >\n            <FormControlLabel\n              value=\"public\"\n              control={<Radio />}\n              label=\"Public\"\n            />\n            <FormControlLabel\n              value=\"private\"\n              control={<Radio />}\n              label=\"Private\"\n            />\n          </RadioGroup>\n        </FormControl>\n      </div>\n    </div>\n  );\n};\n\nexport default AddQuestion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}