{"ast":null,"code":"var _jsxFileName = \"/Users/littlearchit/Desktop/zcoder_-main/src/screen/PublicQuestion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Editor from \"@monaco-editor/react\";\nimport \"./PublicQuestion.css\";\nimport CommentSection from \"../components/CommentSection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PublicQuestion = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [questionData, setQuestionData] = useState(null);\n  useEffect(() => {\n    const fetchQuestionData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/getRecentQuestion/${id}`);\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setQuestionData(data);\n      } catch (error) {\n        console.error(\"Failed to fetch question data:\", error);\n      }\n    };\n    fetchQuestionData();\n  }, [id]);\n  if (!questionData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  const handleCodeChange = newCode => {\n    setQuestionData({\n      ...questionData,\n      code: newCode\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"public-question\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ques-ans\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ques\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), questionData.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ans\",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          value: questionData.code,\n          height: \"100%\",\n          width: \"95%\",\n          theme: \"vs-dark\",\n          language: \"cpp\",\n          onChange: handleCodeChange,\n          options: {\n            automaticLayout: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PublicQuestion, \"lgQ6Ueozw7OTMfPBPPoLxCUxdEk=\", false, function () {\n  return [useParams];\n});\n_c = PublicQuestion;\nexport default PublicQuestion;\nvar _c;\n$RefreshReg$(_c, \"PublicQuestion\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Editor","CommentSection","jsxDEV","_jsxDEV","PublicQuestion","_s","id","questionData","setQuestionData","fetchQuestionData","response","fetch","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","handleCodeChange","newCode","code","className","question","value","height","width","theme","language","onChange","options","automaticLayout","_c","$RefreshReg$"],"sources":["/Users/littlearchit/Desktop/zcoder_-main/src/screen/PublicQuestion.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Editor from \"@monaco-editor/react\";\nimport \"./PublicQuestion.css\";\nimport CommentSection from \"../components/CommentSection\";\n\nconst PublicQuestion = () => {\n  const { id } = useParams();\n  const [questionData, setQuestionData] = useState(null);\n\n  useEffect(() => {\n    const fetchQuestionData = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:8000/getRecentQuestion/${id}`\n        );\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setQuestionData(data);\n      } catch (error) {\n        console.error(\"Failed to fetch question data:\", error);\n      }\n    };\n\n    fetchQuestionData();\n  }, [id]);\n\n  if (!questionData) {\n    return <div>Loading...</div>;\n  }\n\n  const handleCodeChange = (newCode) => {\n    setQuestionData({ ...questionData, code: newCode });\n  };\n\n  return (\n    <div className=\"public-question\">\n      <div className=\"ques-ans\">\n        <div className=\"ques\">\n          <h3>Question</h3>\n          {questionData.question}\n        </div>\n        <div className=\"ans\">\n          <Editor\n            value={questionData.code}\n            height=\"100%\"\n            width=\"95%\"\n            theme=\"vs-dark\"\n            language=\"cpp\"\n            onChange={handleCodeChange}\n            options={{ automaticLayout: true }}\n          />\n        </div>\n      </div>\n      <CommentSection />\n    </div>\n  );\n};\n\nexport default PublicQuestion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}