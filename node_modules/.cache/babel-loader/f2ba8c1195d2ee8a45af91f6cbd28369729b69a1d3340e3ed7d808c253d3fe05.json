{"ast":null,"code":"var _jsxFileName = \"/Users/littlearchit/Desktop/zcoderz-Test/src/components/Particles2.js\",\n  _s = $RefreshSig$();\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { useEffect, useMemo, useState } from \"react\";\n// import { loadAll } from \"@/tsparticles/all\"; // if you are going to use `loadAll`, install the \"@tsparticles/all\" package too.\n// import { loadFull } from \"tsparticles\"; // if you are going to use `loadFull`, install the \"tsparticles\" package too.\nimport { loadSlim } from \"@tsparticles/slim\"; // if you are going to use `loadSlim`, install the \"@tsparticles/slim\" package too.\n// import { loadBasic } from \"@tsparticles/basic\"; // if you are going to use `loadBasic`, install the \"@tsparticles/basic\" package too.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticlesComponent2 = props => {\n  _s();\n  const [init, setInit] = useState(false);\n  // this should be run only once per application lifetime\n  useEffect(() => {\n    initParticlesEngine(async engine => {\n      // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n      // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n      // starting from v2 you can add only the features you need reducing the bundle size\n      //await loadAll(engine);\n      //await loadFull(engine);\n      await loadSlim(engine);\n      //await loadBasic(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n  const particlesLoaded = container => {\n    console.log(container);\n  };\n  const options = useMemo(() => ({\n    background: {\n      color: {\n        value: \"#232741\"\n      }\n    },\n    particles: {\n      number: {\n        value: 160,\n        density: {\n          enable: true,\n          value_area: 800\n        }\n      },\n      color: {\n        value: \"#ffffff\"\n      },\n      shape: {\n        type: \"circle\",\n        stroke: {\n          width: 0,\n          color: \"#000000\"\n        },\n        polygon: {\n          nb_sides: 5\n        },\n        image: {\n          src: \"img/github.svg\",\n          width: 100,\n          height: 100\n        }\n      },\n      opacity: {\n        value: 1,\n        random: true,\n        anim: {\n          enable: true,\n          speed: 1,\n          opacity_min: 0,\n          sync: false\n        }\n      },\n      size: {\n        value: 3,\n        random: true,\n        anim: {\n          enable: false,\n          speed: 4,\n          size_min: 0.3,\n          sync: false\n        }\n      },\n      line_linked: {\n        enable: false,\n        distance: 150,\n        color: \"#ffffff\",\n        opacity: 0.4,\n        width: 1\n      },\n      move: {\n        enable: true,\n        speed: 1,\n        direction: \"none\",\n        random: true,\n        straight: false,\n        out_mode: \"out\",\n        bounce: false,\n        attract: {\n          enable: false,\n          rotateX: 600,\n          rotateY: 600\n        }\n      }\n    },\n    interactivity: {\n      detect_on: \"canvas\",\n      events: {\n        onhover: {\n          enable: true,\n          mode: \"bubble\"\n        },\n        onclick: {\n          enable: true,\n          mode: \"repulse\"\n        },\n        resize: true\n      },\n      modes: {\n        grab: {\n          distance: 400,\n          line_linked: {\n            opacity: 1\n          }\n        },\n        bubble: {\n          distance: 250,\n          size: 0,\n          duration: 2,\n          opacity: 0,\n          speed: 3\n        },\n        repulse: {\n          distance: 400,\n          duration: 0.4\n        },\n        push: {\n          particles_nb: 4\n        },\n        remove: {\n          particles_nb: 2\n        }\n      }\n    },\n    retina_detect: true\n  }), []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: props.id,\n    init: particlesLoaded,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 10\n  }, this);\n};\n_s(ParticlesComponent2, \"eB+NWpxmGZSqHQDaTSx/Qv0E/5M=\");\n_c = ParticlesComponent2;\nexport default ParticlesComponent2;\nvar _c;\n$RefreshReg$(_c, \"ParticlesComponent2\");","map":{"version":3,"names":["Particles","initParticlesEngine","useEffect","useMemo","useState","loadSlim","jsxDEV","_jsxDEV","ParticlesComponent2","props","_s","init","setInit","engine","then","particlesLoaded","container","console","log","options","background","color","value","particles","number","density","enable","value_area","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/littlearchit/Desktop/zcoderz-Test/src/components/Particles2.js"],"sourcesContent":["import Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { useEffect, useMemo, useState } from \"react\";\n// import { loadAll } from \"@/tsparticles/all\"; // if you are going to use `loadAll`, install the \"@tsparticles/all\" package too.\n// import { loadFull } from \"tsparticles\"; // if you are going to use `loadFull`, install the \"tsparticles\" package too.\nimport { loadSlim } from \"@tsparticles/slim\"; // if you are going to use `loadSlim`, install the \"@tsparticles/slim\" package too.\n// import { loadBasic } from \"@tsparticles/basic\"; // if you are going to use `loadBasic`, install the \"@tsparticles/basic\" package too.\n\nconst ParticlesComponent2 = (props) => {\n  const [init, setInit] = useState(false);\n  // this should be run only once per application lifetime\n  useEffect(() => {\n    initParticlesEngine(async (engine) => {\n      // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n      // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n      // starting from v2 you can add only the features you need reducing the bundle size\n      //await loadAll(engine);\n      //await loadFull(engine);\n      await loadSlim(engine);\n      //await loadBasic(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n\n  const particlesLoaded = (container) => {\n    console.log(container);\n  };\n\n  const options = useMemo(\n    () => ({\n        background: {\n            color: {\n              value: \"#232741\",\n            },\n          },\n      particles: {\n        number: {\n          value: 160,\n          density: {\n            enable: true,\n            value_area: 800,\n          },\n        },\n        color: {\n          value: \"#ffffff\",\n        },\n        shape: {\n          type: \"circle\",\n          stroke: {\n            width: 0,\n            color: \"#000000\",\n          },\n          polygon: {\n            nb_sides: 5,\n          },\n          image: {\n            src: \"img/github.svg\",\n            width: 100,\n            height: 100,\n          },\n        },\n        opacity: {\n          value: 1,\n          random: true,\n          anim: {\n            enable: true,\n            speed: 1,\n            opacity_min: 0,\n            sync: false,\n          },\n        },\n        size: {\n          value: 3,\n          random: true,\n          anim: {\n            enable: false,\n            speed: 4,\n            size_min: 0.3,\n            sync: false,\n          },\n        },\n        line_linked: {\n          enable: false,\n          distance: 150,\n          color: \"#ffffff\",\n          opacity: 0.4,\n          width: 1,\n        },\n        move: {\n          enable: true,\n          speed: 1,\n          direction: \"none\",\n          random: true,\n          straight: false,\n          out_mode: \"out\",\n          bounce: false,\n          attract: {\n            enable: false,\n            rotateX: 600,\n            rotateY: 600,\n          },\n        },\n      },\n      interactivity: {\n        detect_on: \"canvas\",\n        events: {\n          onhover: {\n            enable: true,\n            mode: \"bubble\",\n          },\n          onclick: {\n            enable: true,\n            mode: \"repulse\",\n          },\n          resize: true,\n        },\n        modes: {\n          grab: {\n            distance: 400,\n            line_linked: {\n              opacity: 1,\n            },\n          },\n          bubble: {\n            distance: 250,\n            size: 0,\n            duration: 2,\n            opacity: 0,\n            speed: 3,\n          },\n          repulse: {\n            distance: 400,\n            duration: 0.4,\n          },\n          push: {\n            particles_nb: 4,\n          },\n          remove: {\n            particles_nb: 2,\n          },\n        },\n      },\n      retina_detect: true,\n    }),\n    []\n  );\n\n  return <Particles id={props.id} init={particlesLoaded} options={options} />;\n};\n\nexport default ParticlesComponent2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}