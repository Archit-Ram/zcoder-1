{"ast":null,"code":"var _jsxFileName = \"/Users/littlearchit/Desktop/zcoder_-main/src/screen/MyStack.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./MyStack.css\";\nimport YourPost from \"../components/YourPost\";\nimport Library from \"../components/Library\";\nimport { CurrentUserContext } from \"../App\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyStack = () => {\n  _s();\n  const {\n    currentUsername\n  } = useContext(CurrentUserContext);\n  const [myStack, setMyStack] = useState([]);\n  useEffect(() => {\n    const fetchStack = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/${currentUsername}/mystack`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setMyStack(data);\n      } catch (error) {\n        console.error(\"Error fetching recent questions:\", error);\n      }\n    };\n    fetchStack();\n  }, [currentUsername]);\n  const handleDelete = questionId => {\n    setMyStack(prevStack => prevStack.filter(item => item._id !== questionId));\n  };\n  const navlinkstyle = {\n    textDecoration: \"none\",\n    color: \"inherit\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mystack\",\n    children: [/*#__PURE__*/_jsxDEV(Library, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mystackpost\",\n      children: myStack.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postItem\",\n        children: /*#__PURE__*/_jsxDEV(YourPost, {\n          item: item,\n          currentUsername: currentUsername,\n          navlinkstyle: navlinkstyle,\n          onDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(MyStack, \"rqNWpLLtT98KmM7crVBgsNtN4xs=\");\n_c = MyStack;\nexport default MyStack;\nvar _c;\n$RefreshReg$(_c, \"MyStack\");","map":{"version":3,"names":["React","useContext","useEffect","useState","YourPost","Library","CurrentUserContext","NavLink","jsxDEV","_jsxDEV","MyStack","_s","currentUsername","myStack","setMyStack","fetchStack","response","fetch","ok","Error","status","data","json","error","console","handleDelete","questionId","prevStack","filter","item","_id","navlinkstyle","textDecoration","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onDelete","_c","$RefreshReg$"],"sources":["/Users/littlearchit/Desktop/zcoder_-main/src/screen/MyStack.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport \"./MyStack.css\";\nimport YourPost from \"../components/YourPost\";\nimport Library from \"../components/Library\";\nimport { CurrentUserContext } from \"../App\";\nimport { NavLink } from \"react-router-dom\";\n\nconst MyStack = () => {\n  const { currentUsername } = useContext(CurrentUserContext);\n  const [myStack, setMyStack] = useState([]);\n\n  useEffect(() => {\n    const fetchStack = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/${currentUsername}/mystack`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setMyStack(data);\n      } catch (error) {\n        console.error(\"Error fetching recent questions:\", error);\n      }\n    };\n\n    fetchStack();\n  }, [currentUsername]);\n\n  const handleDelete = (questionId) => {\n    setMyStack((prevStack) => prevStack.filter((item) => item._id !== questionId));\n  };\n\n  const navlinkstyle = {\n    textDecoration: \"none\",\n    color: \"inherit\",\n  };\n\n  return (\n    <div className=\"mystack\">\n      <Library />\n      <div className=\"mystackpost\">\n        {myStack.map((item, index) => (\n          <div key={index} className=\"postItem\">\n            <YourPost item={item} currentUsername={currentUsername} navlinkstyle={navlinkstyle} onDelete={handleDelete} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MyStack;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAO,eAAe;AACtB,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,kBAAkB,QAAQ,QAAQ;AAC3C,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAgB,CAAC,GAAGX,UAAU,CAACK,kBAAkB,CAAC;EAC1D,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyBL,eAAe,UAAU,CAAC;QAChF,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCR,UAAU,CAACO,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDR,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACH,eAAe,CAAC,CAAC;EAErB,MAAMa,YAAY,GAAIC,UAAU,IAAK;IACnCZ,UAAU,CAAEa,SAAS,IAAKA,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,UAAU,CAAC,CAAC;EAChF,CAAC;EAED,MAAMK,YAAY,GAAG;IACnBC,cAAc,EAAE,MAAM;IACtBC,KAAK,EAAE;EACT,CAAC;EAED,oBACExB,OAAA;IAAKyB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtB1B,OAAA,CAACJ,OAAO;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACX9B,OAAA;MAAKyB,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBtB,OAAO,CAAC2B,GAAG,CAAC,CAACX,IAAI,EAAEY,KAAK,kBACvBhC,OAAA;QAAiByB,SAAS,EAAC,UAAU;QAAAC,QAAA,eACnC1B,OAAA,CAACL,QAAQ;UAACyB,IAAI,EAAEA,IAAK;UAACjB,eAAe,EAAEA,eAAgB;UAACmB,YAAY,EAAEA,YAAa;UAACW,QAAQ,EAAEjB;QAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADtGE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA1CID,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}